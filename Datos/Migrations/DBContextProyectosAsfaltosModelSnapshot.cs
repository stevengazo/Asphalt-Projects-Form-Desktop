// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelos;

#nullable disable

namespace Datos.Migrations
{
    [DbContext(typeof(DBContextProyectosAsfaltos))]
    partial class DBContextProyectosAsfaltosModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Modelos.Nota", b =>
                {
                    b.Property<int>("NotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotaId"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotaId");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("Modelos.Oferta", b =>
                {
                    b.Property<int>("OfertaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfertaId"));

                    b.Property<string>("AutorPrespuesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("EncargadoCotizador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("OfertaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Ofertas");

                    b.HasData(
                        new
                        {
                            OfertaId = 1,
                            AutorPrespuesto = "Administrador",
                            Cliente = "Ejemplo",
                            Codigo = 1,
                            EncargadoCotizador = "Gabriel",
                            Fecha = new DateTime(2024, 1, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            Monto = 100f,
                            Notas = "",
                            Observaciones = "",
                            UltimaModificacion = new DateTime(2024, 1, 11, 1, 0, 0, 0, DateTimeKind.Local),
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("Modelos.Proyecto", b =>
                {
                    b.Property<int>("ProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProyectoId"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacturaAnticipoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacturaFinalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaOC")
                        .HasColumnType("datetime2");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<string>("OfertaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PorcentajeAnticipo")
                        .HasColumnType("int");

                    b.Property<int>("TareaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UltimaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UltimoEditor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ProyectoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Proyectos");

                    b.HasData(
                        new
                        {
                            ProyectoId = 1,
                            Autor = "Administrador",
                            Cliente = "Ejemplo de Cliente",
                            Contacto = "Ejemplo",
                            Enable = true,
                            Estado = "Finalizado",
                            FacturaAnticipoId = "No existente",
                            FacturaFinalId = "No Existente",
                            FechaFinal = new DateTime(2024, 1, 13, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaInicio = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaOC = new DateTime(2024, 1, 11, 9, 52, 26, 231, DateTimeKind.Local).AddTicks(3967),
                            Monto = 100f,
                            OfertaId = "PS-00001",
                            PorcentajeAnticipo = 50,
                            TareaId = 2000,
                            Tipo = "Instalación",
                            Ubicacion = "Grupo Mecsa",
                            UltimaEdicion = new DateTime(2024, 1, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            UltimoEditor = "Administrador",
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("Modelos.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RolId = 1,
                            Nombre = "Admin"
                        },
                        new
                        {
                            RolId = 2,
                            Nombre = "Vendedor"
                        });
                });

            modelBuilder.Entity("Modelos.RolUsuario", b =>
                {
                    b.Property<int>("RolUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolUsuarioId"));

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("RolUsuarioId");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RolUsuarios");

                    b.HasData(
                        new
                        {
                            RolUsuarioId = 1,
                            RolId = 1,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("Modelos.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("HashContraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Activo = true,
                            HashContraseña = "0192023A7BBD73250516F069DF18B500",
                            Login = "admin",
                            Nombre = "Administrador"
                        });
                });

            modelBuilder.Entity("Modelos.Nota", b =>
                {
                    b.HasOne("Modelos.Proyecto", "Proyecto")
                        .WithMany("Notas")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("Modelos.Oferta", b =>
                {
                    b.HasOne("Modelos.Usuario", "Encargado")
                        .WithMany("Ofertas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encargado");
                });

            modelBuilder.Entity("Modelos.Proyecto", b =>
                {
                    b.HasOne("Modelos.Usuario", "Vendedor")
                        .WithMany("Proyectos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Modelos.RolUsuario", b =>
                {
                    b.HasOne("Modelos.Rol", "Rol")
                        .WithMany("RolUsuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.Usuario", "Usuario")
                        .WithMany("RolUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Modelos.Proyecto", b =>
                {
                    b.Navigation("Notas");
                });

            modelBuilder.Entity("Modelos.Rol", b =>
                {
                    b.Navigation("RolUsuarios");
                });

            modelBuilder.Entity("Modelos.Usuario", b =>
                {
                    b.Navigation("Ofertas");

                    b.Navigation("Proyectos");

                    b.Navigation("RolUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
